/**
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
module "cloud-security-admin-service_accounts" {
  source        = "../../modules/terraform-google-service-accounts/"
  //source        = "terraform-google-modules/service-accounts/google"
  count         = length(var.service_accounts)
  project_id    = var.service_accounts[count.index].project_id
  org_id        = var.organization_id
  names         = var.service_accounts[count.index].names
  prefix        = var.service_accounts[count.index].prefix
  project_roles = var.service_accounts[count.index].project_roles
  org_roles     = var.service_accounts[count.index].org_roles

}
*/
svc-tfe-security

Create in below projects:
prj-d-600001687-IAM
prj-p-600001687-IAM


resource "google_service_account" "cloud-security-admin" {
  account_id   = "svc-tfe-security"
  display_name = "cloud-security-admin-service-account"
  project      = "prj-d-600001687-IAM"
}

module "service_account-cloud-security-admin-iam-bindings" {
  source = "terraform-google-modules/iam/google//modules/service_accounts_iam"

  service_accounts = [google_service_account.service_account_one.email]
  project          = "prj-d-600001687-IAM"
  mode             = "additive"
  bindings = {
    "roles/iam.serviceAccountKeyAdmin" = [
      "serviceAccount:svc-tfe-security@my-project.iam.gserviceaccount.com",
      "group:my-group@my-org.com",
      "user:my-user@my-org.com",
    ]

    "roles/iam.serviceAccountTokenCreator" = [
      "serviceAccount:my-sa@my-project.iam.gserviceaccount.com",
      "group:my-group@my-org.com",
      "user:my-user@my-org.com",
    ]
  }
  conditional_bindings = [
    {
      role = "roles/iam.serviceAccountUser"
      title = "expires_after_2019_12_31"
      description = "Expiring at midnight of 2019-12-31"
      expression = "request.time < timestamp(\"2020-01-01T00:00:00Z\")"
      members = ["user:my-user@my-org.com"]
    }
  ]
}